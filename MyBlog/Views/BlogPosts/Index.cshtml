@model IEnumerable<MyBlog.Models.BlogPost>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService Authorization
@{
    var canAdd = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Add)).Succeeded;
    var canEdit = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Edit)).Succeeded;
    var canDelete = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Delete)).Succeeded;
}
@{
    ViewData["Title"] = "Index";
}

<h1 id="LOB">List of Blogs</h1>
@if (canAdd)
{ 
    <p>
        <a id="CreateNew" asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Body)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Posted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.miniBody)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Posted)
                </td>
                <td>
                    @if (canEdit)
                    {
                        <a class = "editButton" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }
                    
                    | <a class = "editButton" asp-action="Details" asp-route-id="@item.Id">Details</a> |

                    @if (canDelete)
                    {
                        <a class = "editButton" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                    </td>
            </tr>
        }
    </tbody>
</table>
